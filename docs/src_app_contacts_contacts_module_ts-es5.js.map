{"version":3,"sources":["webpack:///src/app/contacts/contact-add/contact-add.component.html","webpack:///src/app/contacts/contact-add/contact-add.component.ts","webpack:///src/app/contacts/contact-delete/contact-delete.component.html","webpack:///src/app/contacts/contact-delete/contact-delete.component.ts","webpack:///src/app/contacts/contact-detail/contact-detail.component.ts","webpack:///src/app/contacts/contact-detail/contact-detail.component.html","webpack:///src/app/contacts/contact-edit/contact-edit.component.ts","webpack:///src/app/contacts/contact-edit/contact-edit.component.html","webpack:///src/app/contacts/contact-list/contact-list.component.ts","webpack:///src/app/contacts/contact-list/contact-list.component.html","webpack:///src/app/contacts/contacts-routing.module.ts","webpack:///src/app/contacts/contacts.component.html","webpack:///src/app/contacts/contacts.component.ts","webpack:///src/app/contacts/contacts.module.ts"],"names":["ContactAddComponent","productService","bsModalService","loading","hideClose","form","valid","product","value","id","Date","valueOf","toString","console","log","add","resetForm","setTimeout","_hideModal","onSubmit","ContactDeleteComponent","removePuppy","onDelete","ContactDetailComponent","route","onClose","ContactEditComponent","ContactListComponent","routes","path","component","ContactsComponent","ContactsRoutingModule","RouterModule","products$","Observable","puppies$","initialProduct","name","model","address","number","bsModalRef","show","initialState","onLoad","ContactsModule","CommonModule","FormsModule"],"mappings":"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","file":"src_app_contacts_contacts_module_ts-es5.js","sourcesContent":["<div class=\"modal-header clearfix\">\n  <h4 class=\"modal-title float-left\">Add New Product</h4>\n  <button *ngIf=\"hideClose\"\n    type=\"button\"\n    class=\"close float-right\"\n    aria-label=\"Close\"\n    (click)=\"onClose()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"form-group\">\n    <form\n      #form=\"ngForm\"\n      (ngSubmit)=\"onSubmit(form)\"\n      [ngClass]=\"{ 'was-validated': form.submitted && form.invalid }\"\n    >\n      <div class=\"row\">\n        <div class=\"col-md-12\" ngModelGroup=\"product\">\n          <div class=\"\">\n            <div class=\"row mt-2\">\n              <div class=\"col-md-6\">\n                <label class=\"labels\">Name</label\n                ><input                \n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"product name\"\n                  required\n                  value=\"\"\n                  name=\"name\"\n                  ngModel\n                />\n              </div>\n              <div class=\"col-md-6\">\n                <label class=\"labels\">Model</label\n                ><input\n                  type=\"text\"\n                  class=\"form-control\"\n                  value=\"\"\n                  placeholder=\"model\"\n                  name=\"model\"\n                  ngModel\n                  required\n                />\n              </div>\n            </div>\n            <div class=\"row mt-3\">\n              <div class=\"col-md-12\">\n                <label class=\"labels\">Number</label\n                ><input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"number\"\n                  value=\"\"\n                  name=\"number\"\n                  ngModel\n                  required\n                />\n              </div>\n              <div class=\"col-md-12\">\n                <label class=\"labels\">Address</label\n                ><input\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"enter address\"\n                  value=\"\"\n                  name=\"address\"\n                  ngModel\n                  required\n                  minlength=\"10\"\n                />\n              </div>\n            </div>\n            <div class=\"mt-5 text-center\">\n              <button\n                class=\"btn btn-outline-success mr-2\"\n                type=\"submit\"\n                [disabled]=\"loading\"\n              >\n                <span\n                  *ngIf=\"loading\"\n                  class=\"spinner-border spinner-border-sm mr-1\"\n                ></span>\n\n                Save\n              </button>\n              <button class=\"btn btn-outline-secondary\" type=\"reset\">\n                Reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { BsModalService } from \"ngx-bootstrap/modal\";\nimport { Product } from \"src/app/product/product.model\";\nimport { ProductService } from \"src/app/product/product.service\";\n\n@Component({\n  selector: \"app-contact-add\",\n  templateUrl: \"./contact-add.component.html\",\n  styleUrls: [\"./contact-add.component.css\"],\n})\nexport class ContactAddComponent implements OnInit {\n  loading = false;\n  hideClose = false;\n  parentObject: any;\n  constructor(\n    private productService: ProductService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    //console.log(this.parentObject);\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.valid) {\n      //this.loading = true;\n      const product = form.value.product as Product;\n      product.id = new Date().valueOf().toString();\n      console.log(product);\n      this.productService.add(product);\n      form.resetForm();\n\n      //this.newListCancelled();\n\n      setTimeout(() => {\n        //this.loading = false;\n      }, 1000 * 2);\n    }\n  }\n\n  onClose() {\n    //this.bsModalService.hide(1);\n    this.bsModalService._hideModal(1);\n    //this.bsModalService.h\n  }\n}\n","<div class=\"modal-header clearfix\">\n  <h4 class=\"modal-title float-left\">Delete Product ?</h4>\n  <button\n    type=\"button\"\n    class=\"close float-right\"\n    aria-label=\"Close\"\n    (click)=\"onDelete()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  <div class=\"\">\n    <p>\n      Are you sure you want to delete product <b>{{ product.name }} </b>? Your\n      product will also be deleted.\n    </p>\n\n    <p>To confirm deletion, click Delete button.</p>\n  </div>\n\n</div>\n\n<div class=\"modal-footer\">\n  <div class=\"text-right\">\n    <button class=\"btn btn-default\" (click)=\"onDelete()\">Cancel</button>\n    &nbsp;\n    <button class=\"btn btn-danger\" (click)=\"onDelete()\" [disabled]=\"loading\">\n      <span\n        *ngIf=\"loading\"\n        class=\"spinner-border spinner-border-sm mr-1\"\n      ></span>\n     \n      Delete\n    </button>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { BsModalService } from \"ngx-bootstrap/modal\";\nimport { Product } from \"src/app/product/product.model\";\nimport { ProductService } from \"src/app/product/product.service\";\n\n@Component({\n  selector: \"app-contact-delete\",\n  templateUrl: \"./contact-delete.component.html\",\n  styleUrls: [\"./contact-delete.component.css\"],\n})\nexport class ContactDeleteComponent implements OnInit {\n  @Input() product: Product;\n  loading = false;\n  constructor(\n    private productService: ProductService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {}\n\n  onDelete() {\n    this.productService.removePuppy(this.product);\n    //this.bsModalService.hide(1);\n    this.bsModalService._hideModal(1);\n  }\n}\n","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { BsModalService } from \"ngx-bootstrap/modal\";\nimport { Product } from \"src/app/product/product.model\";\nimport { ProductService } from \"src/app/product/product.service\";\n\n@Component({\n  selector: \"app-contact-detail\",\n  templateUrl: \"./contact-detail.component.html\",\n  styleUrls: [\"./contact-detail.component.css\"],\n})\nexport class ContactDetailComponent implements OnInit {\n  @Input() product: Product;\n  @Input() news: any;\n  id : string;\n  constructor(\n    private bsModalService: BsModalService,\n    private route: ActivatedRoute,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit(): void {\n    //const id = this.route.snapshot.params[\"id\"];\n\n    // console.log(this.route);\n\n    // const findProduct = this.productService.get().filter((x) => {\n    //   x.id === this.id;\n    // });\n\n    // if (findProduct) {\n    //   this.product = findProduct[0];\n    // }\n    //console.log(this.productService.get().fiiin);\n  }\n\n  onClose() {\n    //this.bsModalService.hide(1);\n    this.bsModalService._hideModal(1);\n    //this.bsModalService.h\n  }\n}\n","<div class=\"modal-header clearfix\">\n  <h4 class=\"modal-title float-left\">Product Details</h4>\n  <button\n    type=\"button\"\n    class=\"close float-right\"\n    aria-label=\"Close\"\n    (click)=\"onClose()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n  {{ news }}\n  <div class=\"\">\n    <p>{{ product.id }}</p>\n    <p>{{ product.name }}</p>\n    <p>{{ product.model }}</p>\n    <p>{{ product.number }}</p>\n    <p>{{ product.address }}</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.css']\n})\nexport class ContactEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact-edit works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css']\n})\nexport class ContactListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact-list works!</p>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { ContactAddComponent } from \"./contact-add/contact-add.component\";\nimport { ContactDetailComponent } from \"./contact-detail/contact-detail.component\";\n\nimport { ContactsComponent } from \"./contacts.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: ContactsComponent },\n  { path: \"add\", component: ContactAddComponent },\n  { path: \"details/:id\", component: ContactDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsRoutingModule {}\n","<button class=\"btn btn-primary\" (click)=\"onLoad()\">Load</button>\n<form\n  #form=\"ngForm\"\n  (ngSubmit)=\"onSubmit(form)\"\n  [ngClass]=\"{ 'was-validated': form.submitted && form.invalid }\"\n>\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"\" ngModelGroup=\"product\">\n        <div class=\"row mt-2\">\n          <div class=\"col-md-6\">\n            <label class=\"labels\">Name</label\n            ><input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"product name\"\n              required\n              value=\"\"\n              name=\"name\"\n              [ngModel]=\"initialProduct.name\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <label class=\"labels\">Model</label\n            ><input\n              type=\"text\"\n              class=\"form-control\"\n              value=\"\"\n              placeholder=\"model\"\n              name=\"model\"\n              [ngModel]=\"initialProduct.model\"\n              required\n            />\n          </div>\n        </div>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <label class=\"labels\">Number</label\n            ><input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"number\"\n              value=\"\"\n              name=\"number\"\n              [ngModel]=\"initialProduct.number\"\n              required\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <label class=\"labels\">Address</label\n            ><input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"enter address\"\n              value=\"\"\n              name=\"address\"\n              [ngModel]=\"initialProduct.address\"\n              required              \n            />\n          </div>\n        </div>\n        <div class=\"mt-5 text-center\">\n          <button\n            class=\"btn btn-outline-success mr-2\"\n            type=\"submit\"\n            [disabled]=\"loading\"\n          >\n            <span\n              *ngIf=\"loading\"\n              class=\"spinner-border spinner-border-sm mr-1\"\n            ></span>\n\n            Save\n          </button>\n          <button class=\"btn btn-outline-secondary\" type=\"reset\">Reset</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n\n<!-- <button class=\"btn btn-primary\" (click)=\"onAdd()\"> Add New</button>\n\n<div class=\"\" *ngFor=\"let product of products$ | async\">\n    {{product | json}}\n    <button class=\"btn btn-primary\" (click)=\"onDetails(product)\">Details</button>\n    <button class=\"btn btn-warning\" (click)=\"onRemove(product)\">delete</button>\n</div> -->\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { BsModalService, BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Observable } from \"rxjs\";\nimport { Product } from \"../product/product.model\";\nimport { ProductService } from \"../product/product.service\";\n\nimport { ContactAddComponent } from \"./contact-add/contact-add.component\";\nimport { ContactDeleteComponent } from \"./contact-delete/contact-delete.component\";\nimport { ContactDetailComponent } from \"./contact-detail/contact-detail.component\";\n\n@Component({\n  selector: \"app-contacts\",\n  templateUrl: \"./contacts.component.html\",\n  styleUrls: [\"./contacts.component.css\"],\n})\nexport class ContactsComponent implements OnInit {\n  initialProduct: Product;\n  products$ = new Observable<Product[]>();\n  bsModalRef: BsModalRef;\n  loading = false;\n\n  @ViewChild(\"form\", { static: false }) form: NgForm;\n  constructor(\n    private bsModalService: BsModalService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit(): void {\n    this.products$ = this.productService.puppies$;\n    this.initialProduct = {\n      name: \"firs\",\n      model: \"nice\",\n      address: \"add\",\n      id: \"1\",\n      number: \"sf\",\n    };\n  }\n  onLoad(){\n    \n  }\n\n  onAdd() {\n    this.bsModalRef = this.bsModalService.show(ContactAddComponent, {\n      initialState: { hideClose: true },\n    });\n  }\n\n  onDetails(product: Product) {\n    this.bsModalRef = this.bsModalService.show(ContactDetailComponent, {\n      initialState: { product: product, hideClose: false },\n    });\n  }\n\n  onRemove(product: Product) {\n    this.bsModalRef = this.bsModalService.show(ContactDeleteComponent, {\n      initialState: { product: product, hideClose: false },\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ContactsRoutingModule } from \"./contacts-routing.module\";\nimport { ContactsComponent } from \"./contacts.component\";\nimport { ContactListComponent } from \"./contact-list/contact-list.component\";\nimport { ContactAddComponent } from \"./contact-add/contact-add.component\";\nimport { ContactDetailComponent } from \"./contact-detail/contact-detail.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ContactEditComponent } from \"./contact-edit/contact-edit.component\";\nimport { ContactDeleteComponent } from \"./contact-delete/contact-delete.component\";\n\n@NgModule({\n  declarations: [\n    ContactsComponent,\n    ContactListComponent,\n    ContactAddComponent,\n    ContactDetailComponent,\n    ContactEditComponent,\n    ContactDeleteComponent,\n  ],\n  imports: [CommonModule, FormsModule, ContactsRoutingModule],\n})\nexport class ContactsModule {}\n"]}