{"version":3,"sources":["webpack:///src/app/product/product-add/product-add.component.html","webpack:///src/app/product/product-add/product-add.component.ts","webpack:///src/app/product/product-delete/product-delete.component.html","webpack:///src/app/product/product-delete/product-delete.component.ts","webpack:///src/app/product/product-detail/product-detail.component.html","webpack:///src/app/product/product-detail/product-detail.component.ts","webpack:///src/app/product/product-edit/product-edit.component.html","webpack:///src/app/product/product-edit/product-edit.component.ts","webpack:///src/app/product/product-list/product-list.component.html","webpack:///src/app/product/product-list/product-list.component.ts","webpack:///src/app/product/product-routing.module.ts","webpack:///src/app/product/product-widget/product-widget.component.ts","webpack:///src/app/product/product-widget/product-widget.component.html","webpack:///src/app/product/product.component.ts","webpack:///src/app/product/product.component.html","webpack:///src/app/product/product.module.ts"],"names":["ProductAddComponent","productService","modalService","faPlus","faSave","faUndo","loading","form","valid","product","value","id","Date","valueOf","toString","console","log","add","resetForm","newListCancelled","setTimeout","template","newListModalRef","show","focus","ignoreBackdropClick","hide","ProductDeleteComponent","faTrash","removePuppy","showModal","ProductDetailComponent","faEye","ProductEditComponent","faEdit","loadProduct","updatePuppy","ProductListComponent","products$","Observable","faThumbsUp","faHeart","faSpinner","currentCount","sampleString","puppies$","res","Math","random","routes","path","component","ProductComponent","ProductRoutingModule","RouterModule","ProductWidgetComponent","bsModalService","store","displayStyle","select","subscribe","products","loadProducts","modalRef","animated","backdrop","i","address","model","name","number","push","dispatch","onAdd","ProductModule","CommonModule","FormsModule","FontAwesomeModule"],"mappings":"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","file":"src_app_product_product_module_ts-es5.js","sourcesContent":["<div class=\"\">\n  <!-- <button class=\"btn btn-primary\" (click)=\"showModal(newModalTemplate)\">\n    <fa-icon [icon]=\"faPlus\"></fa-icon>\n    Add New\n  </button> -->\n\n  <ng-template #newModalTemplate>\n    <div class=\"modal-header clearfix\">\n      <h4 class=\"modal-title float-left\">Add New Product</h4>\n      <button\n        type=\"button\"\n        class=\"close float-right\"\n        aria-label=\"Close\"\n        (click)=\"newListCancelled()\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"form-group\">\n        <form\n          #form=\"ngForm\"\n          (ngSubmit)=\"onSubmit(form)\"\n          [ngClass]=\"{ 'was-validated': form.submitted && form.invalid }\"\n        >\n          <div class=\"row\">\n            <div class=\"col-md-12\" ngModelGroup=\"product\">\n              <div class=\"\">\n                <div class=\"row mt-2\">\n                  <div class=\"col-md-6\">\n                    <label class=\"labels\">Name</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"product name\"\n                      required\n                      value=\"\"\n                      name=\"name\"\n                      ngModel\n                    />\n                  </div>\n                  <div class=\"col-md-6\">\n                    <label class=\"labels\">Model</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      value=\"\"\n                      placeholder=\"model\"\n                      name=\"model\"\n                      ngModel\n                      required\n                    />\n                  </div>\n                </div>\n                <div class=\"row mt-3\">\n                  <div class=\"col-md-12\">\n                    <label class=\"labels\">Number</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"number\"\n                      value=\"\"\n                      name=\"number\"\n                      ngModel\n                      required\n                    />\n                  </div>\n                  <div class=\"col-md-12\">\n                    <label class=\"labels\">Address</label\n                    ><input\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"enter address\"\n                      value=\"\"\n                      name=\"address\"\n                      ngModel\n                      required\n                      minlength=\"10\"\n                    />\n                  </div>\n                </div>\n                <div class=\"mt-5 text-center\">\n                  <button\n                    class=\"btn btn-outline-success mr-2\"\n                    type=\"submit\"\n                    [disabled]=\"loading\"\n                  >\n                    <span\n                      *ngIf=\"loading\"\n                      class=\"spinner-border spinner-border-sm mr-1\"\n                    ></span>\n                    <fa-icon [icon]=\"faSave\"></fa-icon>\n                    Save</button\n                  >\n                  <button class=\"btn btn-outline-secondary\" type=\"reset\">\n                    <fa-icon [icon]=\"faUndo\"></fa-icon>\n                    Reset\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <!-- <div class=\"modal-footer\">\n    <div class=\"text-right\">\n      <button class=\"btn btn-default\" (click)=\"newListCancelled()\">\n        Cancel\n      </button>\n      <button class=\"btn btn-primary\" (click)=\"addList()\">Create</button>\n    </div>\n  </div> -->\n  </ng-template>\n</div>\n","import { Component, OnInit, TemplateRef } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ProductService } from \"../product.service\";\n\nimport { faPlus, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { BsModalService, BsModalRef } from \"ngx-bootstrap/modal\";\nimport { Product } from \"../product.model\";\n\n@Component({\n  selector: \"app-product-add\",\n  templateUrl: \"./product-add.component.html\",\n  styleUrls: [\"./product-add.component.css\"],\n})\nexport class ProductAddComponent implements OnInit {\n\n  newListModalRef: BsModalRef;\n  faPlus = faPlus;\n  faSave = faSave\n  faUndo= faUndo;\n  loading = false;\n\n  constructor(\n    private productService: ProductService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    //this.form.\n  }\n\n  onSubmit(form: NgForm) {\n   \n    if (form.valid) {\n      this.loading = true;\n      const product = (form.value.product) as Product;   \n      product.id =  new Date().valueOf().toString();\n      console.log(product);\n      this.productService.add(product);\n      form.resetForm();\n\n      this.newListCancelled();\n\n      setTimeout(() => {\n        this.loading = false;\n      }, 1000 * 2);\n    }\n  }\n\n  showModal(template: TemplateRef<any>): void {\n    this.newListModalRef = this.modalService.show(template, {\n      focus: true,\n      ignoreBackdropClick: true,\n    });\n  }\n  newListCancelled(): void {\n    this.newListModalRef.hide();\n  }\n}","<a (click)=\"showModal(newModalTemplate)\" class=\"text-danger\">\n  <fa-icon [icon]=\"faTrash\"></fa-icon>\n</a>\n\n<ng-template #newModalTemplate>\n  <div class=\"modal-header clearfix\">\n    <h4 class=\"modal-title float-left\">Delete Product ?</h4>\n    <button\n      type=\"button\"\n      class=\"close float-right\"\n      aria-label=\"Close\"\n      (click)=\"newListCancelled()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"\">\n      <p>\n        Are you sure you want to delete product <b>{{ product.name }} </b>? Your\n        product will also be deleted.\n      </p>\n\n      <p>To confirm deletion, click Delete button.</p>\n    </div>\n    <!-- <div class=\"\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"delete\"\n        value=\"\"\n        name=\"delete\"\n        ngModel\n        required\n      />\n    </div> -->\n  </div>\n\n  <div class=\"modal-footer\">\n    <div class=\"text-right\">\n      <button class=\"btn btn-default\" (click)=\"newListCancelled()\">\n        Cancel\n      </button>\n      &nbsp;\n      <button class=\"btn btn-danger\" (click)=\"onDelete()\" [disabled]=\"loading\">\n        <span\n          *ngIf=\"loading\"\n          class=\"spinner-border spinner-border-sm mr-1\"\n        ></span>\n        <fa-icon [icon]=\"faTrash\"></fa-icon>\n        Delete\n      </button>\n    </div>\n  </div>\n</ng-template>\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Product } from '../product.model';\nimport { ProductService } from '../product.service';\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\n\n@Component({\n  selector: 'app-product-delete',\n  templateUrl: './product-delete.component.html',\n  styleUrls: ['./product-delete.component.css']\n})\nexport class ProductDeleteComponent implements OnInit {\n\n  @Input() product : Product;\n  newListModalRef: BsModalRef;\n  faTrash = faTrash;\n  loading = false;\n  \n  constructor(private productService: ProductService ,private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n    console.log(this.product);\n    //this.form.control.patchValue({product : {name : 'nice name'}});\n  }\n\n  showModal(template: TemplateRef<any>): void {\n    this.newListModalRef = this.modalService.show(template, {\n      focus: true,\n      ignoreBackdropClick: true,\n    });\n  }\n\n  onDelete(){\n    this.loading = true;\n    this.productService.removePuppy(this.product);\n    this.newListCancelled();\n    setTimeout(() => {     \n      this.loading = false;\n    }, 1000 * 5);\n  }\n  newListCancelled(): void {\n    this.newListModalRef.hide();    \n  }\n\n}\n","<a (click)=\"showModal(newModalTemplate)\" class=\"text-info\">\n    <fa-icon [icon]=\"faEye\"></fa-icon>\n  </a>\n  \n  <ng-template #newModalTemplate>\n    <div class=\"modal-header clearfix\">\n      <h4 class=\"modal-title float-left\">Product Details</h4>\n      <button\n        type=\"button\"\n        class=\"close float-right\"\n        aria-label=\"Close\"\n        (click)=\"newListCancelled()\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <div class=\"\">\n        <p>{{product.id}}</p>\n        <p>{{product.name}}</p>\n        <p>{{product.model}}</p>\n        <p>{{product.number}}</p>\n        <p>{{product.address}}</p>\n      </div>\n     \n    </div>\n  \n    <div class=\"modal-footer\">\n      <div class=\"text-right\">\n        <button class=\"btn btn-secondary\" (click)=\"newListCancelled()\">\n          Close\n        </button>\n        &nbsp;\n       \n      </div>\n    </div>\n  </ng-template>\n  ","import { Component, Input, OnInit, TemplateRef } from \"@angular/core\";\nimport { faPlus, faSave, faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { Product } from \"../product.model\";\nimport { ProductService } from \"../product.service\";\n\n@Component({\n  selector: \"app-product-detail\",\n  templateUrl: \"./product-detail.component.html\",\n  styleUrls: [\"./product-detail.component.css\"],\n})\nexport class ProductDetailComponent implements OnInit {\n  newListModalRef: BsModalRef;\n  @Input() product: Product;\n  faPlus = faPlus;\n  faSave = faSave;\n  faEye = faEye;\n  loading = false;\n\n  constructor(\n    private productService: ProductService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {}\n\n  showModal(template: TemplateRef<any>): void {\n    this.newListModalRef = this.modalService.show(template, {\n      focus: true,\n      ignoreBackdropClick: true,\n    });\n  }\n  newListCancelled(): void {\n    this.newListModalRef.hide();\n  }\n}\n","<a (click)=\"showModal(newModalTemplate)\" class=\"text-warning\">\n  <fa-icon [icon]=\"faEdit\"></fa-icon>\n</a>\n\n<ng-template #newModalTemplate>\n  <div class=\"modal-header clearfix\">\n    <h4 class=\"modal-title float-left\">Edit Product</h4>\n    <button\n      type=\"button\"\n      class=\"close float-right\"\n      aria-label=\"Close\"\n      (click)=\"newListCancelled()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <div class=\"form-group\">\n      <form\n        #form=\"ngForm\"\n        (ngSubmit)=\"onSubmit(form)\"\n        [ngClass]=\"{ 'was-validated': form.submitted && form.invalid }\"\n      >\n        <div class=\"row\">\n          <div class=\"col-md-12\" ngModelGroup=\"product\">\n            <div class=\"\">\n              <input type=\"hidden\" name=\"id\" [(ngModel)]=\"loadProduct.id\" />\n              <div class=\"row mt-2\">\n                <div class=\"col-md-6\">\n                  <label class=\"labels\">Name</label\n                  ><input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"product name\"\n                    required\n                    name=\"name\"\n                    [ngModel]=\"loadProduct.name\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <label class=\"labels\">Model</label\n                  ><input\n                    type=\"text\"\n                    class=\"form-control\"\n                    value=\"\"\n                    placeholder=\"model\"\n                    name=\"model\"\n                    [ngModel]=\"loadProduct.model\"\n                    required\n                  />\n                </div>\n              </div>\n              <div class=\"row mt-3\">\n                <div class=\"col-md-12\">\n                  <label class=\"labels\">Number</label\n                  ><input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"number\"\n                    name=\"number\"\n                    [ngModel]=\"loadProduct.number\"\n                    required\n                  />\n                </div>\n                <div class=\"col-md-12\">\n                  <label class=\"labels\">Address</label\n                  ><input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"enter address\"\n                    name=\"address\"\n                    [ngModel]=\"loadProduct.address\"\n                    required\n                    minlength=\"10\"\n                  />\n                </div>\n              </div>\n              <div class=\"mt-5 text-center\">\n                <button class=\"btn btn-outline-success\" type=\"submit\">\n                  <span\n                    *ngIf=\"loading\"\n                    class=\"spinner-border spinner-border-sm mr-1\"\n                  ></span>\n                  Save</button\n                >&nbsp;\n                <button\n                  class=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  (click)=\"newListCancelled()\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</ng-template>\n","import {\n  AfterContentInit,\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n} from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\nimport { Product } from \"../product.model\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { ProductService } from \"../product.service\";\n\n@Component({\n  selector: \"app-product-edit\",\n  templateUrl: \"./product-edit.component.html\",\n  styleUrls: [\"./product-edit.component.css\"],\n})\nexport class ProductEditComponent implements OnInit {\n  @Input() product: Product;\n  loadProduct: Product;\n  newListModalRef: BsModalRef;\n  faEdit = faEdit;\n  public loading = false;\n\n  constructor(\n    private productService: ProductService,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    //console.log(this.product);\n    this.loadProduct = { ...this.product };\n  }\n\n  showModal(template: TemplateRef<any>): void {\n    //console.log(this.product);\n\n    this.newListModalRef = this.modalService.show(template, {\n      focus: true,\n      class : 'modal-lg',\n      ignoreBackdropClick: true,\n    });\n  }\n  newListCancelled(): void {\n    this.newListModalRef.hide();\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form.value);\n    if (form.valid) {\n      this.loading = true;\n      const product = form.value.product as Product;      \n      console.log(product);\n      this.productService.updatePuppy(product);\n    \n\n      this.newListCancelled();\n\n      setTimeout(() => {\n        this.loading = false; \n        form.resetForm();\n      }, 1000 * 2);\n    }\n  }\n}\n","<!-- <div *ngFor=\"let product of products$ | async; index as i\">\n  <div class=\"row\">\n    {{ product.name }}\n    <app-product-detail [product]=\"product\"></app-product-detail>\n    <app-product-edit [product]=\"product\"></app-product-edit>\n    <app-product-delete [product]=\"product\"></app-product-delete>\n  </div>\n</div> -->\n<ol class=\"list-group list-group-numbered\">\n  <li\n    *ngFor=\"let product of products$ | async; index as i\"\n    class=\"card-shadow list-group-item d-flex justify-content-between align-items-start mb-3\"\n  >\n    <div class=\"bd-callout bd-callout-info\">\n      <div>\n        <div class=\"text-uppercase\">{{ i + 1 }} : {{ product.name }}</div>\n        Cras justo odio\n\n        <div class=\"\" [innerHTML]=\"sampleString\"></div>\n        <div class=\"\">\n          <app-product-detail [product]=\"product\"></app-product-detail>\n          <app-product-edit [product]=\"product\"></app-product-edit>\n          <app-product-delete [product]=\"product\"></app-product-delete>\n          <span class=\"\"></span>\n          <fa-icon\n            [icon]=\"faThumbsUp\"\n            class=\"fa fa-2x text-primary\"\n            (click)=\"incrementCounter()\"\n          ></fa-icon>\n          <fa-icon\n            [icon]=\"faHeart\"\n            class=\"fas fa-spinner fa-spin text-danger\"\n            (click)=\"incrementCounter()\"\n          ></fa-icon>\n          <p aria-live=\"polite\">\n            Current count: <strong>{{ currentCount }}</strong>\n          </p>\n        </div>\n      </div>\n      <div class=\"row\">\n        <span class=\"badge bg-warning rounded-pill\">14</span>\n        <span class=\"badge bg-warning rounded-pill\">{{ i + 1 }}</span>\n      </div>\n    </div>\n    <!-- <span class=\"badge badge-pill badge-info\">{{ getRandom(i + 1)  }}</span> -->\n  </li>\n</ol>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Product } from \"../product.model\";\nimport { ProductService } from \"../product.service\";\nimport { faEdit , faThumbsUp , faHeart, faSpinner} from \"@fortawesome/free-solid-svg-icons\";\n\n@Component({\n  selector: \"app-product-list\",\n  templateUrl: \"./product-list.component.html\",\n  styleUrls: [\"./product-list.component.css\"],\n})\nexport class ProductListComponent implements OnInit {\n  public products$ = new Observable<Product[]>();\n  faEdit = faEdit;\n  faThumbsUp = faThumbsUp;\n  faHeart = faHeart;\n  faSpinner = faSpinner;\n  public currentCount = 0;\n\n  public sampleString = `Some time prior to May 2016, <a href=\\\"https://motherboard.vice.com/read/rosebuttboard-ip-board\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">the forum known as &quot;Rosebutt Board&quot; was hacked</a> and 107k accounts were exposed. The self-described &quot;top one board for anal fisting, prolapse, huge insertions and rosebutt fans&quot; had email and IP addresses, usernames and weakly stored salted MD5 password hashes hacked from the IP.Board based forum.`;\n  constructor(private productService: ProductService) {}\n\n  ngOnInit(): void {\n    //this.loadProducts();\n    this.products$ = this.productService.puppies$;\n    //this.productService.removePuppy();\n\n    const res = !this.currentCount;\n  }\n\n  onRemove(product: Product) {\n    //console.log(product);\n    //this.productService.removePuppy(product);\n  }\n\n  getRandom(value: number) {\n    return value * Math.random() * 100;\n  }\n\n\n\n  public incrementCounter() {\n    this.currentCount++;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProductComponent } from './product.component';\n\nconst routes: Routes = [{ path: '', component: ProductComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-widget',\n  templateUrl: './product-widget.component.html',\n  styleUrls: ['./product-widget.component.css']\n})\nexport class ProductWidgetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-widget works!</p>\n","import { Component, OnInit, ViewChild, TemplateRef } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { ProductService } from \"./product.service\";\r\nimport { Product } from \"./product.model\";\r\n\r\nimport { BsModalRef, BsModalService } from \"ngx-bootstrap/modal\";\r\nimport { ProductAddComponent } from \"./product-add/product-add.component\";\r\nimport { Store } from \"@ngrx/store\";\r\nimport { AppState } from \"../store/app.reducer\";\r\nimport * as productActions from \"./store/product.action\";\r\n\r\n@Component({\r\n  selector: \"app-product\",\r\n  templateUrl: \"./product.component.html\",\r\n  styleUrls: [\"./product.component.css\"],\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  public products$ = new Observable<Product[]>();\r\n  displayStyle = \"none\";\r\n  @ViewChild(\"template\") template: TemplateRef<HTMLDivElement>;\r\n  modalRef: BsModalRef;\r\n\r\n  options: string[];\r\n\r\n  selectedOption: string;\r\n\r\n  constructor(\r\n    private productService: ProductService,\r\n    private bsModalService: BsModalService,\r\n    //private productAddComponent: ProductAddComponent\r\n    private store: Store<AppState>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    //this.products$ = this.productService.puppies$;\r\n    this.store.select(\"products\").subscribe((res) => {\r\n      console.log(res.products);\r\n      //res.product\r\n    });\r\n  }\r\n\r\n  onAdd() {\r\n    this.loadProducts();\r\n    //this.modalRef = this.bsModalService.show(ProductAddComponent);\r\n  }\r\n\r\n  openModal() {\r\n    this.modalRef = this.bsModalService.show(this.template, {\r\n      animated: true,\r\n      backdrop: \"static\",\r\n    });\r\n  }\r\n\r\n  openPopup() {\r\n    this.displayStyle = \"block\";\r\n  }\r\n  closePopup() {\r\n    this.displayStyle = \"none\";\r\n  }\r\n\r\n  loadProducts() {\r\n    let products: Product[] = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      const product: Product = {\r\n        id: `${i * 10 * Math.random()}`,\r\n        address: `${i * 10 * Math.random()}`,\r\n        model: `${i * 10 * Math.random()}`,\r\n        name: `${i * 10 * Math.random()}`,\r\n        number: `${i * 10 * Math.random()}`,\r\n      };\r\n      products.push(product);\r\n    }\r\n    this.store.dispatch(new productActions.AddProducts(products));\r\n  }\r\n}\r\n","<div class=\"text-primary text-center\">\r\n  <h1>Product Details</h1>\r\n</div>\r\n\r\n<button (click)=\"onAdd()\" class=\"btn btn-primary\">Add New</button>\r\n<div class=\"\">\r\n  <!-- <app-product-add></app-product-add> -->\r\n</div>\r\n<br />\r\n<div>\r\n  <app-product-list></app-product-list>\r\n</div>\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ProductRoutingModule } from \"./product-routing.module\";\nimport { ProductComponent } from \"./product.component\";\nimport { ProductAddComponent } from \"./product-add/product-add.component\";\nimport { ProductListComponent } from \"./product-list/product-list.component\";\nimport { ProductDetailComponent } from \"./product-detail/product-detail.component\";\nimport { ProductWidgetComponent } from \"./product-widget/product-widget.component\";\nimport { ProductEditComponent } from \"./product-edit/product-edit.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ProductDeleteComponent } from \"./product-delete/product-delete.component\";\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\n\n@NgModule({\n  declarations: [\n    ProductComponent,\n    ProductAddComponent,\n    ProductListComponent,\n    ProductDetailComponent,\n    ProductWidgetComponent,\n    ProductEditComponent,\n    ProductDeleteComponent,\n  ],\n  imports: [CommonModule, FormsModule, FontAwesomeModule, ProductRoutingModule],\n})\nexport class ProductModule {}\n"]}